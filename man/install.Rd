% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/install.R
\name{install}
\alias{install}
\title{Install the Michigan Data Interface (MDI) code repositories and dependencies}
\usage{
install(
  mdiDir = "~",
  installApps = TRUE,
  confirm = TRUE,
  addToPATH = TRUE,
  gitUser = NULL,
  token = NULL,
  clone = TRUE,
  cranRepo = "https://repo.miserver.it.umich.edu/cran/",
  packages = NULL,
  force = FALSE,
  ondemand = FALSE
)
}
\arguments{
\item{mdiDir}{character. Path to the directory where the MDI will be/has 
been installed. Defaults to your home directory, such that the MDI will 
be installed into '~/mdi' by default.}

\item{installApps}{logical. If TRUE (the default), \code{mdi::install()} 
will install both Stage 1 pipelines and Stage 2 apps. If you know you will 
only want to use Stage 1 pipelines from an installation, setting 
\code{installApps} to FALSE will skip the much slower installation of the 
R packages library.}

\item{confirm}{logical. If TRUE (the default) and in interactive mode,
\code{mdi::install()} will list all actions to be taken and prompt for 
permission before creating or modifying any system files.}

\item{addToPATH}{logical. If TRUE (the default) and installing on a Linux
platform computer, \code{mdi::install()} will modify ~/.bashrc to add
the 'mdi' executable to your PATH variable at each shell login, so that 
you may call MDI pipelines from any directory as 'mdi ...'.}

\item{gitUser}{character. Developers should use \code{gitUser} to provide 
the username of the GitHub account that holds their forks of any
frameworks or suites repositories. Code editing is done in these forks,
which will be cloned locally into frameworks/developer-forks and/or 
suites/developer-forks and used by \code{mdi::develop()} instead of the 
upstream repos, when available.}

\item{token}{character. The GitHub Personal Access Token (PAT) that grants
permissions for accessing forked repositories in the \code{gitUser} account,
and/or any tool suites that have restricted access. You can also preset the 
token into environment variable \code{GITHUB_PAT} using
\code{Sys.setenv(GITHUB_PAT = "your_token")}.}

\item{clone}{logical. If TRUE (the default), the apps and pipelines code 
repositories will be cloned anew from GitHub if they do not already exist, 
or they will be pulled from the server to update a repository if they have been 
cloned previously. Developers might want to set this option to FALSE.}

\item{cranRepo}{character. The base URL of the R repository to use, e.g., the
URL of a CRAN mirror. Defaults to the University of Michigan CRAN mirror.}

\item{packages}{character vector. If not NULL (the default), only install
these specific R packages (for developers to quickly update selected
packages). No other actions will be taken and the library's installation.rds
file will not be updated.}

\item{force}{logical.  When FALSE (the default), \code{mdi::install()}
does not attempt to update R packages that have previously been installed,
regardless of version. When TRUE, all packages are installed without further
prompting.}

\item{ondemand}{logical. If TRUE, the installer will not install _any_ R
packages, as they will be used from the managed host installation. Default
is FALSE.}
}
\value{
A list of installation data with names components 'versions', dirs', 
'repos', 'rRepos', 'packages'. This information will be incomplete if 
\code{packages} was not NULL (repos and rRepos will be NULL, packages will  
only contain\code{packages}) or if installApps was FALSE (repos, rRepos and 
packages will all be NULL).
}
\description{
Install all dependencies of the Michigan Data Interface (MDI). This will 
include Bioconductor's BiocManager and its child packages, as well as a 
series of Git repositories cloned from GitHub.
}
\details{
No action will be taken unless approved by the user when prompted.

All default settings are consistent with an end user running the MDI in 
local mode on their desktop or laptop computer.

All componenents will be install into directory \code{mdiDir}. 
\code{mdiDir} must already exist, it will not be created. 

If \code{mdiDir} ends with '/mdi' it will be used as is without further 
prompting. Otherwise, a subdirectory of that name will be created in 
\code{mdiDir} after prompting for confirmation.

If they do not already exist, \code{mdi::install()} will create a series of
subdirectories in \code{mdiDir} without further prompting, as follows:
\itemize{
  \item data = project-specific input and output files
  \item environments = conda environments used by data analysis pipelines
  \item frameworks = git repositories with common code for all pipelines and apps
  \item library = version-controlled library of R packages private to the MDI
  \item resources = version-controlled ~static files such as reference data sets
  \item sessions = temporary files associated with user web sessions
  \item suites = git repositories with code that defines specific pipelines and apps
}

As an alternative to using \code{gitUser} and \code{token}, developers and
users can also create script 'gitCredentials.R' in \code{mdiDir}, or in 
their home directory, with the following contents to be sourced by 
\code{mdi::install()}:
    Sys.setenv(GIT_USER = "xxxx")
    Sys.setenv(GITHUB_PAT = "xxxx")
}
