% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/install.R
\name{install}
\alias{install}
\title{Install Michigan Data Interface (MDI) dependencies}
\usage{
install(
  rootDir = "~",
  stages = 1:2,
  gitUser = NULL,
  token = NULL,
  clone = TRUE,
  cranRepo = "https://repo.miserver.it.umich.edu/cran/",
  packages = NULL,
  force = FALSE,
  ondemand = FALSE
)
}
\arguments{
\item{rootDir}{character. Path to the directory where the MDI
will be/has been installed. Defaults to your home directory.}

\item{stages}{integer vector. The number(s) of the MDI analysis stages to install,
where 1=pipelines, 2=apps. The default (1:2) will attempt to install both
Stage 1 pipelines and Stage 2 apps for use on the computer or server.}

\item{gitUser}{character. Developers should use \code{gitUser} to provide 
the username of the GitHub account that holds their forks of any
frameworks or suites repositories. Code editing is done in these forks,
which will be cloned locally into frameworks/developer-forks and/or 
suites/developer-forks and used by \code{mdi::develop()} instead of the 
upstream repos, when available.}

\item{token}{character. The GitHub Personal Access Token (PAT) that grants
permissions for accessing forked repositories in the \code{gitUser} account,
and/or any tool suites that have restricted access. You can also preset the 
token into environment variable \code{GITHUB_PAT} using
\code{Sys.setenv(GITHUB_PAT = "your_token")}.}

\item{clone}{logical. If TRUE (the default), the apps and pipelines code 
repositories will be cloned anew from GitHub if they do not already exist, 
or they will be pulled from the server to update a repository if they have been 
cloned previously. Developers might want to set this option to FALSE.}

\item{cranRepo}{character. The base URL of the R repository to use, e.g., the
URL of a CRAN mirror. Defaults to the University of Michigan CRAN mirror.}

\item{packages}{character vector. If not NULL (the default), only install
these specific R packages (useful for developers to quickly update selected
packages). No other actions will be taken.}

\item{force}{logical.  When FALSE (the default), \code{mdi::install()}
does not attempt to update R packages that have previously been installed,
regardless of version. When TRUE, all packages are installed without further
prompting.}

\item{ondemand}{logical. If TRUE, the installer will not install _any_ R
packages, as they will be used from the managed host installation. Default
is FALSE.}
}
\value{
same as BiocManager::install
}
\description{
Install all dependencies of the Michigan Data Interface (MDI). 
This will include Bioconductor's BiocManager and its child packages.
}
\details{
All default settings are consistent with an end user running the 
MDI in local mode on their desktop or laptop computer.

\code{rootDir} must already exist, it will not be created. 

If \code{rootDir} ends with '/mdi' it will be used as is
without prompting. Otherwise, a subdirectory of that name will be 
created in \code{rootDir} after prompting for confirmation.

If they do not already exist, \code{mdi::install()} will create a series of
subdirectories in \code{rootDir} without prompting, as follows:
\itemize{
  \item data = project-specific input and output files
  \item environments = conda environments used by data analysis pipelines
  \item frameworks = git repositories with common code for all pipelines and apps
  \item library = version-controlled library of R packages private to the MDI
  \item resources = version-controlled ~static files such as reference data sets
  \item sessions = temporary files associated with user web sessions
  \item suites = git repositories with code that defines specific pipelines and apps
}
}
