% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run.R
\name{run}
\alias{run}
\alias{develop}
\alias{ondemand}
\title{Run the Michigan Data Interface (MDI) in a web server}
\usage{
run(
  mdiDir = "~",
  dataDir = NULL,
  hostDir = NULL,
  mode = "local",
  install = TRUE,
  url = "http://localhost",
  port = 3838,
  browser = mode \%in\% c("local", "ondemand"),
  debug = FALSE,
  developer = FALSE
)

develop(mdiDir = "~", dataDir = NULL, url = "http://localhost", port = 3838)

ondemand(hostDir, mdiDir = "~", dataDir = NULL, port = 3838)
}
\arguments{
\item{mdiDir}{character. Path to the directory where the MDI has 
previously been installed. Defaults to your home directory, such that 
the MDI will run from '~/mdi' by default.}

\item{dataDir}{character. Path to the directory where your MDI data
can be found. Defaults to '\code{mdiDir}/data'. You might wish to change
this to a directory that holds shared data, e.g., for your laboratory.}

\item{hostDir}{character. Path to the directory where a hosted, i.e., a 
shared public, installation of the MDI can be found. The following folders 
from that installation will be used instead of from the user installation 
executing the \code{mdi::run()} command:
\itemize{
  \item config
  \item environments
  \item library
  \item resources
}
Option \code{hostDir} must be set if you ran \code{mdi::install()}
with option \code{installPackages} set to FALSE.}

\item{mode}{character. Controls aspects of server behavior. The following
valid values will help you properly run the MDI web server on/in:
\itemize{
  \item local = your desktop or laptop
  \item remote = a server you have direct access to via SSH
  \item node = a worker node in a Slurm cluster, accessed via SSH to a login node
  \item ondemand = a worker node in a Slurm cluster, accessed via Open OnDemand
  \item server = a mdi-cloud-server container on a publicly addressable cloud instance
}
Most users manually calling \code{mdi::run()} want 'local' (the default).}

\item{install}{logical. When TRUE (the default), \code{mdi::run()} will
clone or pull all repositories and install any missing R packages. Setting 
\code{install} to FALSE will allow the server to start a bit more quickly.
Ignored when \code{mode} is 'node', since cluster nodes are not expected 
to have internet access to download software.}

\item{url}{character. The complete browser URL to load the web page. 
Examples: 'http://localhost' (the default) or 'https://mymdi.org'.}

\item{port}{integer. The port to use on the host specified in \code{url}.
Defaults to the canonical Shiny port, 3838. Example: setting \code{url} 
to 'https://mymdi.org' and \code{port} to 5000 will yield a final access 
url of 'https://mymdi.org:5000/'.}

\item{browser}{logical. Whether or not to attempt to launch a web browser 
after starting the MDI server. Defaults to FALSE unless \code{mode} is 'local'
or 'ondemand'.}

\item{debug}{logical. When \code{debug} is TRUE and \code{mode} is 'local'
or 'ondemand', verbose activity logs will be printed to the R console where 
\code{mdi::run()} was called. Defaults to FALSE. Ignored if \code{mode} is 
'remote', 'node', or 'server'.}

\item{developer}{logical. When \code{developer} is TRUE, additional
development utilities are added to the web page and forked repositories
will be used if they exist. Ignored if \code{mode} is set to 'server'.}
}
\value{
These functions never return. They launch a blocking web server 
that runs perpeptually in the parent R process in the global environment.
}
\description{
\code{run()} launches the suites of data analysis applications that comprise
the Michigan Data Interface (MDI) in a web server, either on a web host 
that is publicly addressable, on your local computer, or on on a cluster 
compute node or other ssh accessible server. \code{develop()} is a shortcut 
to \code{run()} with settings appropriate for developers (mode='local', 
browser=FALSE, debug=TRUE, developer=TRUE).
}
\details{
All default settings are consistent with an end user running the MDI in 
local mode on their desktop or laptop computer.

\code{mdiDir} must be the same directory as used in a prior call to 
\code{mdi::install()}.

When \code{developer} is FALSE, \code{run()} will use the definitive
version of all repositories checked out to the latest version tag on 
the 'main' branch (or the tip of main if no version tags are set).

When \code{developer} is TRUE, \code{run()} will use a developer-forks
repository for each framework or suite when it exists, otherwise, it
will fall back to the definitive repository. Forked repos will be left
on whatever branch they were already on, whereas definitive repos
will be checked out to the tip of the 'main' branch.

When \code{developer} is TRUE, you must have git properly installed on
your computer. To pull or push code via the GUI, you must also have 
enabled non-prompted authorized access to the remote repositories 
(e.g., via the command line).

#' If access to private repositories or developer forks is needed, you must
create script 'gitCredentials.R' in \code{mdiDir} or your home directory, 
to be sourced by \code{mdi::run()}, with the following contents:
gitCredentials <- list(
    USER_NAME  = "First Last",
    USER_EMAIL = "lastf@example.com",
    GIT_USER   = "xxx",
    GITHUB_PAT = "xxx"
)
where GIT_USER and GITHUB_PAT are the username and Personal Access 
Token of a GitHub account that holds any developer forks and/or grants
permissions for accessing any tool suites that have restricted access.
}
